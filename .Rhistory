legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
# low wind penetration i = 431
# Generators revenues when low wind penetration
# png('images/generator_dispatch_lwp.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, new_dispatch_hour[431,], type = "h",lend="square", lwd = 10, xlab = "", xaxt ="n", ylab = "[MWh]", ylim = c(0,1000) )
axis(1, at=1:20, labels = new_participants[1:20], las = 2, cex.axis = 1.2, lwd = 2)
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
# png('images/revenues_dispatch_lwp.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, revenues_hour[431,1:17]/1000, type = "h", lend="square", lwd = 10, ylab = "[k€]", xlab = "", xaxt ="n", ylim = c(0,45))
axis(1, at=1:17, labels = new_participants[1:17], las = 2, cex.axis = 1.2, cex.lab=2)
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
########################################################
########################################################
# Overall revenues
overall_revenues = matrix(0,nrow = 1, ncol = 17)
for (i in 1:17){
overall_revenues[,i] = sum(revenues_hour[1:N_simulations,i])
}
png('images/overall_revenues.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, overall_revenues[1,1:17]/1000, type = "h", lend="square", lwd = 10, ylab = "[k€]", xlab = "", xaxt ="n", ylim = c(0,35000))
abline(v = 8.5, type = 'l' )
dev.off()
dev.off()
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, overall_revenues[1,1:17]/1000, type = "h", lend="square", lwd = 10, ylab = "[k€]", xlab = "", xaxt ="n", ylim = c(0,35000))
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
axis(1, at=1:17, labels = new_participants[1:17], las = 2, cex.axis = 1.2, lwd = 2)
# title(main = "[January] Overall revenues for each market participant")
dev.off()
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, overall_revenues[1,1:17]/1000, type = "h", lend="square", lwd = 10, ylab = "[k€]", xlab = "", xaxt ="n", ylim = c(0,35000))
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
axis(1, at=1:17, labels = new_participants[1:17], las = 2, cex.axis = 1.2, lwd = 2)
a = overall_revenues[1,1:17]/1000
source('~/Documents/DTU/B_Semester-2/31761_Renew_ElectricityMarkets/Assignments/Assignment1/New_try/main.R')
# Revenues plots
# We order Generators for DK1 and for DK2
new_dispatch_hour = matrix(0,nrow = N_simulations, ncol = 17)
new_dispatch_hour[,1:2] = dispatch_hour[,1:2]
new_dispatch_hour[,3:8] = dispatch_hour[,5:10]
new_dispatch_hour[,9:10] = dispatch_hour[,3:4]
new_dispatch_hour[,11:17] = dispatch_hour[,11:17]
# Therefore the participants are :
new_participants = c("WW1","WW2",
"FlexiGas", "FlexiGas", "FlexiGas",
"Peako", "Peako","Nuke22",
"EW1","EW2", "Nuke22",
"RoskildeCHP", "RoskildeCHP",
"Avedovre", "Avedovre",
"BlueWater", "BlueWater") # "Transmission_line", "Shedding1", "Shedding2")
#
eq.price_hour = matrix(0,nrow = N_simulations, ncol = 17)
eq.price_hour[,1:8] = price_hour_new[,1] # DK1
eq.price_hour[,9:17] = price_hour_new[,2] # DK2
# particular case of support
eq.price_hour[,2] = eq.price_hour[,2] + 17 # premium
eq.price_hour[,10] = 25 # feed in tariff
revenues_hour = matrix(0,nrow = N_simulations, ncol = 17)
for (i in 1:N_simulations){
revenues_hour[i,] = eq.price_hour[i,]*new_dispatch_hour[i,]
}
# png('images/hourly_revenues_from_wind_DK12.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar = c(5, 5,4, 2))
plot(1:N_simulations,(revenues_hour[,1]+revenues_hour[,2])/1000, type = 'h', xlab = "Time [h]", ylab = "Revenues [k€]", lwd = 5)
lines(1:N_simulations,(revenues_hour[,9]+revenues_hour[,10])/1000, type = 'h', xlab = "Time [h]", ylab = "Revenues [k€]", col = "grey", lwd = 3)
legend("topleft", legend= c("DK1","DK2"), col = c("black", "grey"), lty = 1, cex = 0.75, lwd = 2)
title(main = "Hourly revenues from wind production")
# dev.off()
# high wind penetration i = 650
# png('images/generator_dispatch_hwp.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, new_dispatch_hour[650,], type = "h", lend="square", lwd = 10, xlab = "", xaxt ="n", ylab = "[MWh]" ,ylim = c(0,2800))
axis(1, at=1:17, labels = new_participants[1:17], las = 2, cex.axis = 1.2, lwd=2)
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
# title(main="Generators dispatch when high wind penetration")
# dev.off()
# png('images/revenues_dispatch_hwp.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, revenues_hour[650,]/1000, type = "h",lend="square", lwd = 10, ylab = "[k€]", xlab = "", xaxt ="n")
lines(2,revenues_hour[650,2]/1000, type = "h", col = "red", lwd = 10, lend="square")
axis(1, at=1:17, labels = new_participants[1:17], las = 2, cex.axis = 1.2, lwd= 2)
# title(main="Generators revenues when high wind penetration")
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
# mtext(paste0("Eq. price (€) in DK1 - DK2 resp. : ", price_hour_new[650,1], " / ", price_hour_new[650,2]), 1, line=7, col = "blue")
# dev.off()
# low wind penetration i = 431
# Generators revenues when low wind penetration
# png('images/generator_dispatch_lwp.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, new_dispatch_hour[431,], type = "h",lend="square", lwd = 10, xlab = "", xaxt ="n", ylab = "[MWh]", ylim = c(0,1000) )
axis(1, at=1:20, labels = new_participants[1:20], las = 2, cex.axis = 1.2, lwd = 2)
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
# title(main="Generators dispatch when low wind penetration")
# dev.off()
# png('images/revenues_dispatch_lwp.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, revenues_hour[431,1:17]/1000, type = "h", lend="square", lwd = 10, ylab = "[k€]", xlab = "", xaxt ="n", ylim = c(0,45))
axis(1, at=1:17, labels = new_participants[1:17], las = 2, cex.axis = 1.2, cex.lab=2)
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
# title(main="Generators revenues when low wind penetration")
# mtext(paste0("Eq. price (€) in DK1 - DK2 resp. : ", price_hour_new[431, 1], " / ", price_hour_new[431,2]), 1, line=7, col = "blue")
# dev.off()
########################################################
########################################################
# Overall revenues
overall_revenues = matrix(0,nrow = 1, ncol = 17)
for (i in 1:17){
overall_revenues[,i] = sum(revenues_hour[1:N_simulations,i])
}
png('images/overall_revenues.png', width = 580, height = 400, units = "px", pointsize = 12)
par(mar=c(8, 4, 2, 2) + 0.1)
plot(1:17, overall_revenues[1,1:17]/1000, type = "h", lend="square", lwd = 10, ylab = "[k€]", xlab = "", xaxt ="n", ylim = c(0,35000))
abline(v = 8.5, type = 'l' )
legend("topleft", legend = "DK1 ")
legend("topright", legend = "DK2")
axis(1, at=1:17, labels = new_participants[1:17], las = 2, cex.axis = 1.2, lwd = 2)
# title(main = "[January] Overall revenues for each market participant")
dev.off()
overall_revenues[1,1:17]/1000
a
price_hour_new[650,1]
price_hour_new[650,2]
price_hour_new[431,2]
price_hour_new[431,1]
dispatch_hour[650,18]/600
dispatch_hour[430,18]/600
abs(dispatch_hour[650,18]/600)
dispatch_hour[431,18]/600
mean(price_hour_new[1:744,1])
mean(price_hour_new[1:744,2])
dispatch_hour
# #png('images/usage_transmission_lwp.#png', width = 580, height = 400, units = "px", pointsize = 12)
plot(110:130, demand_hour[110:130,1], type = 'h', ylim = c(0,3500), xlab = "Time [h]", ylab = "[MW]", lwd = 10)
lines(110:130,dispatch_hour[110:130,1]+dispatch_hour[110:130,2]+dispatch_hour[110:130,5]+dispatch_hour[110:130,6]+dispatch_hour[110:130,7]+dispatch_hour[110:130,8]+dispatch_hour[110:130,9]+dispatch_hour[110:130,10], col = "grey", lwd = 4, type = "h")
lines(110:130,dispatch_hour[110:130,1]+dispatch_hour[110:130,2], col = "darkorange", lwd = 4, type = "h")
abline(h=600, col ="red", lty = 1, lwd = 2)
points(110:130, dispatch_hour[110:130,18], xlab = "Time [h]", ylab = "[MWh]", col = "green", lwd = 4, pch = 3)
plot(620:660, demand_hour[620:660,1], type = 'h', ylim = c(-2500,3500), xlab = "Time [h]", ylab = "[MW]", lwd = 10, cex.lab = 1.5, cex.axis = 1.2)
lines(620:660,dispatch_hour[620:660,1]+dispatch_hour[620:660,2]+dispatch_hour[620:660,5]+dispatch_hour[620:660,6]+dispatch_hour[620:660,7]+dispatch_hour[620:660,8]+dispatch_hour[620:660,9]+dispatch_hour[620:660,10], col = "grey", lwd = 4, type = "h")
lines(620:660, Wind$DK1[620:660],col = "blue", lwd = 4, type = "h" )
lines(620:660,dispatch_hour[620:660,1]+dispatch_hour[620:660,2], col = "darkorange", lwd = 4, type = "h")
lines(620:660, dispatch_hour[620:660,18], type = "h", xlab = "Time [h]", ylab = "[MWh]", col = "green", lwd = 4)
abline(h=-600, col ="red", lty = 2, lwd = 2)
abline(h=600, col ="red", lty = 2, lwd = 2)
legend("bottomleft", legend = c("Electricity demand in DK1", "Electricity prod. in DK1",
"Electricity prod. from wind", "Transmission to DK2 (negative = export to DK2)",
"Wind availabilities", "Transmission cap"),
col = c("black", "grey", "orange","green", "blue","red"), lty = c(1,1,1,1,1,2), cex = 0.75, lwd = 4 )
# For DK1 between the hour 620 and 660
par(mar = c(4.5, 4.5,2, 2))
plot(620:660, demand_hour[620:660,1], type = 'h', ylim = c(-2500,3500), xlab = "Time [h]", ylab = "[MW]", lwd = 10, cex.lab = 1.5, cex.axis = 1.2)
lines(620:660,dispatch_hour[620:660,1]+dispatch_hour[620:660,2]+dispatch_hour[620:660,5]+dispatch_hour[620:660,6]+dispatch_hour[620:660,7]+dispatch_hour[620:660,8]+dispatch_hour[620:660,9]+dispatch_hour[620:660,10], col = "grey", lwd = 4, type = "h")
lines(620:660, Wind$DK1[620:660],col = "blue", lwd = 4, type = "h" )
lines(620:660,dispatch_hour[620:660,1]+dispatch_hour[620:660,2], col = "darkorange", lwd = 4, type = "h")
lines(620:660, dispatch_hour[620:660,18], type = "h", xlab = "Time [h]", ylab = "[MWh]", col = "green", lwd = 4)
abline(h=-600, col ="red", lty = 2, lwd = 2)
abline(h=600, col ="red", lty = 2, lwd = 2)
legend("bottomleft", legend = c("Electricity demand in DK1", "Electricity prod. in DK1",
"Electricity prod. from wind", "Transmission to DK2 (negative = export to DK2)",
"Wind availabilities", "Transmission cap"),
col = c("black", "grey", "orange","green", "blue","red"), lty = c(1,1,1,1,1,2), cex = 0.75, lwd = 4 )
source('~/Desktop/Hand_in/main.R')
setwd("~/Desktop/Hand_in")
source('~/Desktop/Hand_in/main.R')
source('~/Desktop/Hand_in/main.R')
pie(slices, lbls, col=c("blue", "grey"), title("try"))
pie(slices, lbls, col=c("blue", "grey"), title("try"))
pie(slices, lbls, col=c("blue", "grey"), main = "Wind curtailment DK2")
pie(slices, lbls, col=c("blue", "grey"), , main = "Wind curtailment DK1")
########################################################
########################################################
# We focus on the wind curtailement in DK1
par(mar = c(5, 5,4, 5))
plot(1:N_simulations, Wind$DK1, type = 'h', lwd = 5, xlab = "Time [h]", ylab = "[MWh]")
lines(1:N_simulations, dispatch_hour[,1]+dispatch_hour[,2], col = "grey", type = 'h', lwd = 5)
legend("bottomright", legend = c("Wind offers", "Wind production"), col = c("black", "grey"), lwd = 2, lty = 1, cex = 0.75)
title(main = "Wind Curtailment in DK1")
curtail_DK1 = round(Wind$DK1 - dispatch_hour[,1] - dispatch_hour[,2])
curtail_on = sum(curtail_DK1 !=0)/length(curtail_DK1)
curtail_off = 1 - curtail_on
slices = c(curtail_on, curtail_off)
lbls = c(paste0("wind curtailment : ", round(curtail_on*100), " %"), paste0("full production : ",round(curtail_off*100), " %"))
# pie representation
par(mar = c(5, 5,4, 5))
pie(slices, lbls, col=c("blue", "grey"), , main = "Wind curtailment DK1")
source("main.R")
########################################################
########################################################
# DK1 let's look at the price evolution
plot(1:N_simulations, price_hour_new[,1], xlab = "Time [h]", ylab = "Electricity price [Eur/MWh]",ylim = c(-20, max(price_hour_new[,1])+50), type = "l", col = "black", lwd = 1.5)
abline( h = max(price_hour_new[,1]), col = "red", lwd = 2)
abline( h = mean(price_hour_new[,1]), col = "red", lty = 3, lwd = 3)
abline(h=0)
legend("topleft", legend= c("DK1", paste0("Max price : ", max(price_hour_new[,1]), " €/MWh"), paste0("Mean price over the month: ", round(mean(price_hour_new[,1])), " €/MWh")),
col = c("black", "red","red"), lty = c(1,1,3), lwd = 2, cex = 0.75)
plot(1:24, apply(prices_day_dk1, 1,mean), type = 'h', lwd = 15, ylim = c(-25,120), xlab = "Time slot", ylab = "[€/MWh]", cex.axis = 1.75, cex.lab = 1.5, yaxt ='n')
########################################################
## Average price per time slot
prices_day_dk1 = matrix(0, nrow = 24, ncol = 31)
prices_day_dk2 = matrix(0, nrow = 24, ncol = 31)
k = 1
for (i in 1:(N_simulations-1)){
j = i%%24
cat(paste0("j = ",j), "\n")
cat(paste0("k = ",k), "\n")
if (j != 0){
k = k
prices_day_dk1[j,k] = price_hour_new[i,1]
prices_day_dk2[j,k] = price_hour_new[i,2]
}else{
k=k+1
prices_day_dk1[24,k-1] = price_hour_new[i,1]
prices_day_dk2[24,k-1] = price_hour_new[i,2]
}
}
par(mar = c(4.5, 4.5,2, 2))
plot(1:24, apply(prices_day_dk1, 1,mean), type = 'h', lwd = 15, ylim = c(-25,120), xlab = "Time slot", ylab = "[€/MWh]", cex.axis = 1.75, cex.lab = 1.5, yaxt ='n')
axis(side = 2,seq(-20,100,10))
lines(1:24, apply(prices_day_dk2, 1,mean), type = 'h', lwd = 12, ylim = c(0,100), col = "gray50")
points(1:24,apply(prices_day_dk1, 1,max), col = "black", lwd = 4, pch = "+")
points(1:24,apply(prices_day_dk2, 1,max), col = "grey", lwd = 4, pch = "+")
par(mar = c(4.5, 4.5,2, 2))
plot(1:24, apply(prices_day_dk1, 1,mean), type = 'l', lwd = 3, ylim = c(-25,120),
xlab = "Time slot", ylab = "[€/MWh]", cex.axis = 2, cex.lab = 2, col = "purple")
abline(h=seq(-20,120,10), lty = 2, col = "grey")
abline(v = seq(0,24,1), lty = 2, col = "grey")
lines(1:24, apply(prices_day_dk2, 1,mean), type = 'l', lwd = 3, ylim = c(0,100), col = "green")
lines(1:24,apply(prices_day_dk1, 1,max), col = "purple", lwd = 2, type = "o")
lines(1:24,apply(prices_day_dk2, 1,max), col = "green", lwd = 2, type = "o" )
lines(1:24,apply(prices_day_dk1, 1,min), col = "purple", lwd = 2, lty = 2)
lines(1:24,apply(prices_day_dk2, 1,min), col = "green", lwd = 2, lty = 2)
legend("topleft", legend = c("DK1", "DK2"), col = c("purple","green"), lwd = 3, lty = 1, cex = 1)
legend("topright", legend = c("Max", "Min"), col = c("black"), lwd = 2, pch = c("o",""), lty = c(1,2), cex = 1.)
source('~/Desktop/Hand_in/demand_plot.R')
source('~/Desktop/Hand_in/revenues_plot.R')
# General wind penetration
par(mar = c(4.5, 4.5,2, 2))
wp = ((dispatch_hour[,1]+dispatch_hour[,2]+dispatch_hour[,3]+dispatch_hour[,4])/(demand_hour[,1]+demand_hour[,2]))*100
mean_wp = mean(wp)
plot(1:N_simulations, wp,
type = 'l', ylim = c(-5,105), xlab = "Time [h]", ylab = "[%]", lwd = 2)
abline(h = mean_wp,
col = "blue")
legend("bottomright", legend = paste0("Mean penetration over January : ", round(mean_wp), " %" ), lty = 1, col = "blue")
title(main = "Wind penetration in DK")
# Wind production
plot(1:N_simulations, demand_hour[,1], type = 'l', ylim = c(0,4000), xlab = "Time [h]", ylab = "[MW]", lwd = 2)
lines(1:N_simulations,dispatch_hour[,1]+dispatch_hour[,2], col = "blue", lwd = 2)
legend("topleft", legend = c("Electricity demand in DK1", "Wind production in DK1"), col = c("black", "blue"), lty = c(1,1), cex = 0.75, lwd = 2 )
title(main= "Wind production in the electricity market DK1")
# let's look at the wind penetration in this market
## Wind energy penetration [%] is calculated as the wind energy produced in a time period [hour; day; year]
## divided by the total electricity consumption in that period
count = 0
for (i in 1:N_simulations){
if ((dispatch_hour[i,1]+dispatch_hour[i,2])/demand_hour[i,1]*100 >= 100) count = count + 1
}
par(mar = c(4.5, 4.5,2, 2))
plot(1:N_simulations, (dispatch_hour[,1]+dispatch_hour[,2])/demand_hour[,1]*100, type = 'l', ylim = c(-5,135),
xlab = "Time [h]", ylab = "[%]", lwd = 2)
title(main = "Wind penetration in DK1")
source('~/Desktop/Hand_in/wind_penetration_plot.R')
source('~/Desktop/Hand_in/shedding.R')
shedding
source('~/Desktop/Hand_in/shedding.R')
source('~/Desktop/Hand_in/shedding.R')
# Influence of the transmission
# DK1
DK1_dispatch = rowSums(dispatch_hour[425:435,1:2])+rowSums(dispatch_hour[425:435,5:10])
# make labels and margins smaller
par(cex=1, mai=c(0.05,0.01,0.2,0.6))
# define area for the histogram
par(fig=c(0.1,0.8,0.2,0.9))
plot(425:435, demand_hour[425:435,1], type = 'h',lend="square", ylim = c(-transmission_cap-1700,3500),
xlab = "Time [h]", ylab = "[MW]", lwd = 15, cex.lab = 1.5, cex.axis = 1.2, col = "black")
lines(425:435,DK1_dispatch,
col = "grey", lwd = 15, type = "h",lend="square")
lines(424.8:434.8, Wind$DK1[425:435],col = "blue", lwd = 15, type = "h",lend="square" )
lines(425.2:435.2,dispatch_hour[425:435,1]+dispatch_hour[425:435,2], col = "darkorange",
lwd = 15, type = "h", lend = "square")
abline(h=-transmission_cap, col ="red", lty = 2, lwd = 2)
abline(h=transmission_cap, col ="red", lty = 2, lwd = 2)
legend("bottomleft", legend = c("Electricity demand in DK1", "Electricity prod. in DK1",
"Electricity prod. from wind","Wind offers"),
col = c("black", "grey", "orange", "blue"), lty = c(1,1,1,1), cex = 1, lwd = 4 )
legend("topright", legend = paste0("Transmission cap : +/- ", transmission_cap, "MWh"), col = "red", lty = 1)
# define area for the boxplot
par(fig=c(0.85,1,0.1,1), new=TRUE)
plot(431, demand_hour[431,1], type = 'h',lend="square", ylim = c(2000,2200), xaxt ="n",
ylab = "[MW]", lwd = 15, cex.lab = 1.5, cex.axis = 1.2, col = "black")
lines(431,DK1_dispatch[7],
col = "grey", lwd = 15, type = "h",lend="square")
segments(431,DK1_dispatch[7],
431,DK1_dispatch[7]+dispatch_hour[431,18],  col = "red",lend="square", lwd = 15)
source('~/Desktop/Hand_in/shedding.R')
source('~/Desktop/Hand_in/shedding.R')
## low wind penetration at h=431
i = 431 # low penetration
b = c(WW1_pp*Wind$DK1[i], WW2_pp*Wind$DK1[i],EW1_pp*Wind$DK2[i], EW2_pp*Wind$DK2[i],
400, 330, 345, 390, 510, Nuke22$G6_quantity[i], Nuke22$G7_quantity[i], 320, 360, 400, 350, 730, 630, transmission_cap, 10000, 10000)
f.obj = c(0, -17, 0, -25, 70, 64, 153, 82, 89, Nuke22$G6_price[i], Nuke22$G7_price[i], 43, 39, 36, 31, 5, 10, 0, 10000, 10000)
# DK1
quantity = c(b[1:2],b[5:10])
price = c(f.obj[1:2],f.obj[5:10])
demand_dk1 = Consumption$DK1[i] + GermanyExport$Germany_quantity[i] - NorwayImport$Norway_Quantity[i]
data_dk1 = data.frame(quantity = quantity, price = price)
data_dk1 = data_dk1[order(data_dk1$price),]
new_quantity = m_order(data_dk1$quantity)
data_dk1[,1] = new_quantity
simple_merit_order_plot(data_dk1, paste0("Market clearing DK1 : low wind penetration hour =  ", i ), TRUE, demand_dk1)
# DK2
quantity = c(b[3:4],b[11:17])
price = c(f.obj[3:4],f.obj[11:17])
demand_dk2 = Consumption$DK2[i] + SwedenExport$Sweden_quantity[i]
data_dk2 = data.frame(quantity = quantity, price = price)
data_dk2 = data_dk2[order(data_dk2$price),]
new_quantity = m_order(data_dk2$quantity)
data_dk2[,1] = new_quantity
simple_merit_order_plot(data_dk2, paste0("Market clearing DK2 : low wind penetration hour =  ", i ), TRUE, demand_dk2)
data_dk2
price_hour_new[341,2]
price_hour_new[431,2]
demand_dk2
dispatch_hour[431,18]
## Transmission capacity MWh
transmission_cap = 600
## Save the results
dispatch_hour = matrix(0,nrow = N_simulations, ncol = 20)
price_hour_new = matrix(0,nrow = N_simulations, ncol = 2)
demand_hour = matrix(0,nrow = N_simulations, ncol = 2)
## DK1 = WEST / DK2 = EAST
for (i in 1:N_simulations){
# Build the lp mode : # 17 generators + 1 transmission + shedding capacity in both area
lps.model <- make.lp(22,20)
set.column(lps.model, 1, c(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 2, c(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 3, c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
set.column(lps.model, 4, c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
set.column(lps.model, 5, c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 6, c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 7, c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 8, c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 9, c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 10, c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0))
set.column(lps.model, 11, c(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1))
set.column(lps.model, 12, c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1))
set.column(lps.model, 13, c(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1))
set.column(lps.model, 14, c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1))
set.column(lps.model, 15, c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1))
set.column(lps.model, 16, c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1))
set.column(lps.model, 17, c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1))
set.column(lps.model, 18, c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,-1))
set.column(lps.model, 19, c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0))
set.column(lps.model, 20, c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1))
# Define the objective function (bid prices / trnasmission / shedding)
set.objfn(lps.model, c(0, -17, 0, -25, 70, 64, 153, 82, 89, Nuke22$G6_price[i], Nuke22$G7_price[i], 43, 39, 36, 31, 5, 10, 0, 10000, 10000))
# Define the contraint vector of 20 inequalities and 2 equalities (2 demand)
set.constr.type(lps.model, c(rep("<=", 20),"=", "=") )
# Define the capacity of each participant for the inequalities
b = c(WW1_pp*Wind$DK1[i], WW2_pp*Wind$DK1[i],EW1_pp*Wind$DK2[i], EW2_pp*Wind$DK2[i],
400, 330, 345, 390, 510,Nuke22$G6_quantity[i], Nuke22$G7_quantity[i], 320, 360, 400, 350, 730, 630, transmission_cap, lsDK1= 10000, lsDK2=10000)
# Define the 2 demand for the equalities
beq_DK1 = Consumption$DK1[i] + GermanyExport$Germany_quantity[i] - NorwayImport$Norway_Quantity[i]
beq_DK2 = Consumption$DK2[i] + SwedenExport$Sweden_quantity[i]
beq = c(beq_DK1, beq_DK2)
# Right hand side constraint merge the previous two vectors b and beq
set.rhs(lps.model, c(b,beq))
# Define the -transmission_cap boundary limit
set.bounds(lps.model, lower = -transmission_cap, columns = 18)
# solve !
solve(lps.model)
# Who participates
dispatch_hour[i,] <- get.variables(lps.model)
# facing what demand
demand_hour[i,1] = beq_DK1
demand_hour[i,2] = beq_DK2
# at what price
price_hour_new[i,1] <- get.dual.solution(lps.model)[22] # happens to be the 22nd and 23rd column, don't know why...
price_hour_new[i,2] <- get.dual.solution(lps.model)[23]
}
# here we look at the usage of the transmission
count = 0
i = 431 # low penetration
b = c(WW1_pp*Wind$DK1[i], WW2_pp*Wind$DK1[i],EW1_pp*Wind$DK2[i], EW2_pp*Wind$DK2[i],
400, 330, 345, 390, 510, Nuke22$G6_quantity[i], Nuke22$G7_quantity[i], 320, 360, 400, 350, 730, 630, transmission_cap, 10000, 10000)
f.obj = c(0, -17, 0, -25, 70, 64, 153, 82, 89, Nuke22$G6_price[i], Nuke22$G7_price[i], 43, 39, 36, 31, 5, 10, 0, 10000, 10000)
# DK1
quantity = c(b[1:2],b[5:10])
price = c(f.obj[1:2],f.obj[5:10])
demand_dk1 = Consumption$DK1[i] + GermanyExport$Germany_quantity[i] - NorwayImport$Norway_Quantity[i]
data_dk1 = data.frame(quantity = quantity, price = price)
data_dk1 = data_dk1[order(data_dk1$price),]
new_quantity = m_order(data_dk1$quantity)
data_dk1[,1] = new_quantity
simple_merit_order_plot(data_dk1, paste0("Market clearing DK1 : low wind penetration hour =  ", i ), TRUE, demand_dk1)
# DK2
quantity = c(b[3:4],b[11:17])
price = c(f.obj[3:4],f.obj[11:17])
demand_dk2 = Consumption$DK2[i] + SwedenExport$Sweden_quantity[i]
data_dk2 = data.frame(quantity = quantity, price = price)
data_dk2 = data_dk2[order(data_dk2$price),]
new_quantity = m_order(data_dk2$quantity)
data_dk2[,1] = new_quantity
simple_merit_order_plot(data_dk2, paste0("Market clearing DK2 : low wind penetration hour =  ", i ), TRUE, demand_dk2)
dispatch_hour[431,18]
price_hour_new[431,2]
i = 650
b = c(WW1_pp*Wind$DK1[i], WW2_pp*Wind$DK1[i],EW1_pp*Wind$DK2[i], EW2_pp*Wind$DK2[i],
400, 330, 345, 390, 510, Nuke22$G6_quantity[i], Nuke22$G7_quantity[i], 320, 360, 400, 350, 730, 630, transmission_cap, 10000, 10000)
f.obj = c(0, -17, 0, -25, 70, 64, 153, 82, 89, Nuke22$G6_price[i], Nuke22$G7_price[i], 43, 39, 36, 31, 5, 10, 0, 10000, 10000)
# DK1
quantity = c(b[1:2],b[5:10])
price = c(f.obj[1:2],f.obj[5:10])
demand_dk1 = Consumption$DK1[i] + GermanyExport$Germany_quantity[i] - NorwayImport$Norway_Quantity[i]
data_dk1 = data.frame(quantity = quantity, price = price)
data_dk1 = data_dk1[order(data_dk1$price),]
new_quantity = m_order(data_dk1$quantity)
data_dk1[,1] = new_quantity
simple_merit_order_plot(data_dk1, paste0("Market clearing DK1 : hour =  ", i ), TRUE, demand_dk1)
# DK2
quantity = c(b[3:4],b[11:17])
price = c(f.obj[3:4],f.obj[11:17])
demand_dk2 = Consumption$DK2[i] + SwedenExport$Sweden_quantity[i]
data_dk2 = data.frame(quantity = quantity, price = price)
data_dk2 = data_dk2[order(data_dk2$price),]
new_quantity = m_order(data_dk2$quantity)
data_dk2[,1] = new_quantity
simple_merit_order_plot(data_dk2, paste0("Market clearing DK2 : high wind penetration hour =  ", i ), TRUE, demand_dk2)
# here we look at the usage of the transmission
count = 0
for (i in 1:N_simulations) if (abs(dispatch_hour[i,18])==600) count = count + 1
cat(count/N_simulations*100) # return the % of time when transmission is fully used
plot(1:N_simulations, dispatch_hour[,18], type = 'h', xlab = "Time [h]", ylab = "[MW]", col = "black", ylim = c(-800,600), cex.lab = 1.5)
par(mar = c(6, 4.5,2, 2))
plot(1:N_simulations, dispatch_hour[,18], type = 'h', xlab = "Time [h]", ylab = "[MW]", col = "black", ylim = c(-800,600), cex.lab = 1.5)
dev.off
dev.off()
par(mar = c(6, 4.5,2, 2))
plot(1:N_simulations, dispatch_hour[,18], type = 'h', xlab = "Time [h]", ylab = "[MW]", col = "black", ylim = c(-800,600), cex.lab = 1.5)
DK12_transmission = DK21_transmission = matrix(0, nrow = 24, ncol = 31)
k = 1
for (i in 1:(N_simulations-1)){
j = i%%24
if (j != 0){
k = k
if (dispatch_hour[i,18] >= 0){
DK12_transmission[j,k] = dispatch_hour[i,18]/transmission_cap*100
} else{
DK21_transmission[j,k] = -dispatch_hour[i,18]/transmission_cap*100
}
}else{
k=k+1
if (dispatch_hour[i,18] >= 0){
DK12_transmission[24,k-1] = dispatch_hour[i,18]/transmission_cap*100
} else{
DK21_transmission[24,k-1] = -dispatch_hour[i,18]/transmission_cap*100
}
}
}
DK12_transmission
rowSums(DK12_transmission[1:24,]==100)/31*100
rowSums(DK21_transmission[1:24,]==100)/31*100
rowSums(DK12_transmission[1:24,1:2])
View(DK12_transmission)
DK12_transmission = DK21_transmission = matrix(0, nrow = 24, ncol = 31)
k = 1
for (i in 1:(N_simulations-1)){
j = i%%24
if (j != 0){
k = k
if (dispatch_hour[i,18] >= 0){
DK21_transmission[j,k] = dispatch_hour[i,18]/transmission_cap*100
} else{
DK12_transmission[j,k] = -dispatch_hour[i,18]/transmission_cap*100
}
}else{
k=k+1
if (dispatch_hour[i,18] >= 0){
DK21_transmission[24,k-1] = dispatch_hour[i,18]/transmission_cap*100
} else{
DK12_transmission[24,k-1] = -dispatch_hour[i,18]/transmission_cap*100
}
}
}
# How often the transmission is congested
par(mar = c(4.5, 4.5,2, 2))
plot(1:24, rowSums(DK21_transmission[1:24,]==100)/31*100, type = 'h', lwd = 15, ylim = c(0,100), xlab = "Time slot", ylab = "[%]", cex.axis = 1.75, cex.lab = 1.5)
lines(1:24, rowSums(DK12_transmission[1:24,]==100)/31*100, type = 'h', lwd = 12, ylim = c(0,100), col = "grey")
legend("topleft", legend = c("DK1 => DK2", "DK2 => DK1"), col = c("black", "grey"), lwd = 5, lty = 1, cex = 1.25)
plot(1:24, rowSums(DK21_transmission[1:24,]==100)/31*100, type = 'h', lwd = 15, ylim = c(0,100), xlab = "Time slot", ylab = "[%]", cex.axis = 1.75, cex.lab = 1.5)
legend("topleft", legend = c("DK2 => DK1", "DK1 => DK2"), col = c("black", "grey"), lwd = 5, lty = 1, cex = 1.25)
title(main = "Congestion of the transmission cable")
